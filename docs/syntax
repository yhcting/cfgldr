Token
=====
Syntax unit of configuration.
Whitespace characters(' \t\n') are NOT ALLOWED as token.

'[' : start of section
']' : end of section
'@' : command key prefix
'#' : comment prefix
string: key/section name, key value and so on.

Syntax
======
Comment: '# comment....'
Command: '@name' + '(argument)'
Section: '[' + name(Token) + ']' + comment(optional)
Key/Value: 'key' + <spaces> + '='(Token) + <spaces> + 'value' + comment(optional)
Named-replacement: following named-replacement syntax of python - %()s.


Named-replacement
-----------------
%()s is replaced based on replacement dictionary.
See loader.py:load_config() function
Named replacement is processed BEFORE parsing conf file.

Key/Value
---------
* special key syntax
!key: This means 'Non-overwritable' key (final key).
      This key cannot be overwrite at any case.
~key: Temp key. Key is removed after parsing current config file.
      Temp key is always overwritable.



Each tokes SHOULD BE SEPARATED with AT LEAST one space/tab characters
That is, '+' means one ore more whitespaces.
See following example. '#' without leading 'space' has different meaning.

key = value
key = value#This is NOT comment
key = value #This is comment

* Value: syntax
unquoted string: there is no escape character.
single-line quoted string: quoted by ' or ". \ is used as escaped char.
multi-line quoted string: qutoed by ''' or """. \ is used as escaped char.

* Value: key replacement
Named-key-replacement is processed with key-name and key-path(section path)
For example. "(!key)" is replaced with key value.
(To escape this, use '((!key)')
In addition to key name, key-path is also available.
':' is used as delimiter of key-path.
By default, key path is searched from current section.
So, (!key) is 'key in current section'
Leading ':' is used to denote absolute key-path(path from root section).
Example: (!section:key) (!:parent_sec:sec:key)


